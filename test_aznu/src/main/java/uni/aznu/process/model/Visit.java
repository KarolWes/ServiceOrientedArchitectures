/*
 * Booking mircro service
 * Micro service to book a traveling equipment
 *
 * OpenAPI spec version: 1.0.0
 * Contact: supportm@bp.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uni.aznu.process.model;

import com.fasterxml.jackson.annotation.JsonProperty;

import javax.annotation.Generated;
import java.time.OffsetDateTime;
import java.util.Objects;
/**
 * Visit
 */

@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-12-08T17:56:55.610943700+01:00[Europe/Warsaw]")

public class Visit {
  @JsonProperty("date")
  private OffsetDateTime date = null;

  @JsonProperty("vType")
  private String vType = null;

  public Visit date(OffsetDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  public OffsetDateTime getDate() {
    return date;
  }

  public void setDate(OffsetDateTime date) {
    this.date = date;
  }

  public Visit vType(String vType) {
    this.vType = vType;
    return this;
  }

   /**
   * Get vType
   * @return vType
  **/
  public String getVType() {
    return vType;
  }

  public void setVType(String vType) {
    this.vType = vType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Visit visit = (Visit) o;
    return Objects.equals(this.date, visit.date) &&
        Objects.equals(this.vType, visit.vType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, vType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Visit {\n");
    
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    vType: ").append(toIndentedString(vType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
