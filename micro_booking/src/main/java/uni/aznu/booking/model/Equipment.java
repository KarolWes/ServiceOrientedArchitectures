/*
 * Travel mircro service
 * Micro service to book a travel
 *
 * OpenAPI spec version: 1.0.0
 * Contact: supportm@bp.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uni.aznu.booking.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Generated;
import lombok.Data;

import java.time.OffsetDateTime;
/**
 * Equipment
 */

@Data
@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-06T08:44:40.322365400+01:00[Europe/Warsaw]")
public class Equipment {

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("eType")
  private String eType = null;

  @JsonProperty("state")
  private String state = null;

  @JsonProperty("dateFrom")
  private OffsetDateTime dateFrom = null;

  @JsonProperty("dateTo")
  private OffsetDateTime dateTo = null;

  public Equipment name(String name) {
    this.name = name;
    return this;
  }

  public Equipment eType(String eType) {
    this.eType = eType;
    return this;
  }

  public Equipment state(String state) {
    this.state = state;
    return this;
  }

  public Equipment dateFrom(OffsetDateTime dateFrom) {
    this.dateFrom = dateFrom;
    return this;
  }

  public Equipment dateTo(OffsetDateTime dateTo) {
    this.dateTo = dateTo;
    return this;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Equipment equipment = (Equipment) o;
    return Objects.equals(this.name, equipment.name) &&
            Objects.equals(this.eType, equipment.eType) &&
            Objects.equals(this.state, equipment.state) &&
            Objects.equals(this.dateTo, equipment.dateTo) &&
            Objects.equals(this.dateFrom, equipment.dateFrom);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, eType, state, dateFrom, dateTo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Equipment {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    city: ").append(toIndentedString(eType)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    dateFrom: ").append(toIndentedString(dateFrom)).append("\n");
    sb.append("    dateFrom: ").append(toIndentedString(dateTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
