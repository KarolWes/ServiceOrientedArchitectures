/*
 * Travel mircro service
 * Micro service to book a travel
 *
 * OpenAPI spec version: 1.0.0
 * Contact: supportm@bp.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package uni.aznu.booking.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Generated;
import lombok.Data;

/**
 * BookRoomRequest
 */

@Data
@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-06T08:44:40.322365400+01:00[Europe/Warsaw]")
public class BookEquipmentRequest {
  @JsonProperty("person")
  private Person person = null;

  @JsonProperty("equipment")
  private Equipment equipment = null;

  public BookEquipmentRequest person(Person person) {
    this.person = person;
    return this;
  }

  public BookEquipmentRequest equipment(Equipment equipment) {
    this.equipment = equipment;
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BookEquipmentRequest bookEquipmentRequest = (BookEquipmentRequest) o;
    return Objects.equals(this.person, bookEquipmentRequest.person) &&
        Objects.equals(this.equipment, bookEquipmentRequest.equipment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(person, equipment);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BookRoomRequest {\n");
    
    sb.append("    person: ").append(toIndentedString(person)).append("\n");
    sb.append("    equipment: ").append(toIndentedString(equipment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
